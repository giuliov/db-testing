# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: Demos

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Microsoft Azure Sponsorship'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      SNAPSHOT_TIMESTAMP=$(az storage share snapshot --account-name $STORAGEACCOUNT_NAME --account-key $STORAGEACCOUNT_KEY --name database -o json --query "snapshot")
      echo "##vso[task.setvariable variable=SNAPSHOT_TIMESTAMP;]${SNAPSHOT_TIMESTAMP:1:-1}"
  env:
    STORAGEACCOUNT_NAME: $(STORAGEACCOUNT_NAME)
    STORAGEACCOUNT_KEY: $(STORAGEACCOUNT_KEY)
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'src/pipeline/db-tests/db-tests.csproj'
    testRunTitle: 'Database tests'
  env:
    SA_PASSWORD: $(SA_PASSWORD)
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Microsoft Azure Sponsorship'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage file copy start --account-name $STORAGEACCOUNT_NAME --account-key $STORAGEACCOUNT_KEY --destination-share database --destination-path pubs.mdf --source-share database --source-path pubs.mdf --file-snapshot $SNAPSHOT_TIMESTAMP -o json
      az storage file copy start --account-name $STORAGEACCOUNT_NAME --account-key $STORAGEACCOUNT_KEY --destination-share database --destination-path pubs_log.ldf --source-share database --source-path pubs_log.ldf --file-snapshot $SNAPSHOT_TIMESTAMP -o json
      # get rid of snapshot after copy completes
      sleep 5s
      az storage share delete --account-name $STORAGEACCOUNT_NAME --account-key $STORAGEACCOUNT_KEY --name database --snapshot $SNAPSHOT_TIMESTAMP -o json
  env:
    STORAGEACCOUNT_NAME: $(STORAGEACCOUNT_NAME)
    STORAGEACCOUNT_KEY: $(STORAGEACCOUNT_KEY)
    SNAPSHOT_TIMESTAMP: $(SNAPSHOT_TIMESTAMP)
